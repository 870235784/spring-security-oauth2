server:
  port: 9002

spring:
  thymeleaf:
    cache: false
  application:
    name: client-b

security:
  oauth2:
    client:
      # 客户端 key-secret 认证服务器通过客户端key-secret判断是否给当前客户端授权码code
      # spring-security-oauth2 默认通过授权码模式进行认证
      client-id: clientb
      client-secret: 123456
      # 请求认证地址
      user-authorization-uri: http://localhost:7001/auth/oauth/authorize
      # 请求令牌地址
      access-token-uri: http://localhost:7001/auth/oauth/token
    resource:
      jwt:
        # 当用户授权后会带着授权码重定向回客户端 localhost:9001/login?code=xxx
        # 对应/login会自动的去获取令牌，并通过key-uri指定的地址去获取公钥校验令牌有效性，
        # 然后完成本地认证与授权
        key-uri: http://localhost:7001/auth/oauth/token_key


eureka:
  client:
    registerWithEureka: true # 服务注册开关
    fetchRegistry: true # 服务发现开关
    serviceUrl: # 注册到哪一个Eureka Server服务注册中心，多个中间用逗号分隔
      defaultZone: http://localhost:7001/eureka
  instance:
    instanceId: ${spring.application.name}:${server.port} # 指定实例ID,页面会显示主机名
    preferIpAddress: true  #访问路径可以显示IP地址eureka:


